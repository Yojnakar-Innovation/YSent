@model YSent.Models.PasswordReset


<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: Arial, sans-serif;
    }

    .page-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #f5f5f5;
    }

    .container {
        display: flex;
        gap: 2rem;
        padding: 2rem;
        background: white;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        max-width: 800px;
        width: 100%;
        margin: 1rem;
    }

    .image-section {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .form-section {
        flex: 1;
        padding: 1rem;
    }

    h1 {
        color: #333;
        margin-bottom: 1rem;
        font-size: 1.8rem;
    }

    p {
        color: #666;
        margin-bottom: 1.5rem;
        font-size: 0.9rem;
    }

    .input-group {
        margin-bottom: 1rem;
    }

    input[type="email"] {
        width: 100%;
        padding: 0.8rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
    }

    .error-message {
        color: #ff3333;
        font-size: 0.8rem;
        margin-top: 0.5rem;
        display: none;
    }

        .error-message.show {
            display: block;
        }

    .submit-btn {
        width: 100%;
        padding: 0.8rem;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .submit-btn:hover {
            background-color: #45a049;
        }

    .back-link {
        display: block;
        text-align: center;
        margin-top: 1rem;
        color: #666;
        text-decoration: none;
        font-size: 0.9rem;
    }

        .back-link:hover {
            color: #333;
        }

    .icon-container {
        position: relative;
        width: 200px;
        height: 200px;
        background: #f0f4ff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .icon-container::before {
            content: '';
            position: absolute;
            width: 180px;
            height: 180px;
            background: #e3e9ff;
            border-radius: 50%;
        }

    .lock-icon {
        width: 100px;
        height: 100px;
        background-color: #1a73e8;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        z-index: 1;
        box-shadow: 0 4px 8px rgba(26, 115, 232, 0.2);
    }

        .lock-icon svg {
            width: 50px;
            height: 50px;
            fill: white;
        }
</style>

<div class="page-container">
    <div class="container">
        <div class="image-section">
            <div class="icon-container">
                <div class="lock-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                        <path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z" />
                    </svg>
                </div>
            </div>
        </div>
        <div class="form-section">
            <h1>Forgot Password</h1>
            <p>Enter your email and we'll send you a link to reset your password.</p>

            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="validation-summary-errors">
                    <p>@ViewBag.ErrorMessage</p>
                </div>
            }

            @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
            {
                <div class="success-message">
                    <p>@ViewBag.SuccessMessage</p>
                </div>
            }

            @using (Html.BeginForm())
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, "Email Address")
                    @Html.TextBoxFor(m => m.Email, new { type = "email", placeholder = "Enter your email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "error-message" })
                </div>

                <button type="submit" class="submit-btn">Send Reset Link</button>
            }
            <a href="@Url.Action("SignIn", "Account")" class="back-link">← Back to Login</a>
        </div>
    </div>
</div>